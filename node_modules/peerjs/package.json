{
  "_args": [
    [
      {
        "raw": "peerjs@^0.3.14",
        "scope": null,
        "escapedName": "peerjs",
        "name": "peerjs",
        "rawSpec": "^0.3.14",
        "spec": ">=0.3.14 <0.4.0",
        "type": "range"
      },
      "/Users/lckyn/Sites/peerjs"
    ]
  ],
  "_from": "peerjs@>=0.3.14 <0.4.0",
  "_id": "peerjs@0.3.14",
  "_inCache": true,
  "_location": "/peerjs",
  "_npmUser": {
    "name": "michelle",
    "email": "michelle@michellebu.com"
  },
  "_npmVersion": "1.3.26",
  "_phantomChildren": {},
  "_requested": {
    "raw": "peerjs@^0.3.14",
    "scope": null,
    "escapedName": "peerjs",
    "name": "peerjs",
    "rawSpec": "^0.3.14",
    "spec": ">=0.3.14 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/peerjs/-/peerjs-0.3.14.tgz",
  "_shasum": "5f934eb09a04ce237a47d52f4766c9373da2511e",
  "_shrinkwrap": null,
  "_spec": "peerjs@^0.3.14",
  "_where": "/Users/lckyn/Sites/peerjs",
  "author": {
    "name": "Michelle Bu, Eric Zhang"
  },
  "bugs": {
    "url": "https://github.com/peers/peerjs/issues"
  },
  "dependencies": {
    "eventemitter3": "^0.1.5",
    "js-binarypack": "0.0.9",
    "reliable": "git+https://github.com/michelle/reliable.git"
  },
  "description": "PeerJS client",
  "devDependencies": {
    "expect.js": "*",
    "grunt": "^0.4.5",
    "grunt-browserify": "^3.0.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-concat": "^0.5.0",
    "grunt-contrib-uglify": "^0.5.1",
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "5f934eb09a04ce237a47d52f4766c9373da2511e",
    "tarball": "https://registry.npmjs.org/peerjs/-/peerjs-0.3.14.tgz"
  },
  "homepage": "https://github.com/peers/peerjs#readme",
  "license": "MIT",
  "main": "./lib/peer.js",
  "maintainers": [
    {
      "name": "michelle",
      "email": "michellebu@berkeley.edu"
    },
    {
      "name": "ericz",
      "email": "really.ez@gmail.com"
    }
  ],
  "name": "peerjs",
  "optionalDependencies": {},
  "readme": "# PeerJS: Simple peer-to-peer with WebRTC #\n\nPeerJS provides a complete, configurable, and easy-to-use peer-to-peer API built on top of WebRTC, supporting both data channels and media streams.\n\n### [http://peerjs.com](http://peerjs.com)\n\n## Setup\n\n\n**Include the library**\n\n```html\n<script src=\"http://cdn.peerjs.com/0.3/peer.js\"></script>\n```\n\n**Create a Peer**  \nGet a [free API key](http://peerjs.com/peerserver). Your id only needs to be unique to the namespace of your API key.\n```javascript\nvar peer = new Peer('pick-an-id', {key: 'myapikey'}); \n// You can pick your own id or omit the id if you want to get a random one from the server.\n```\n\n## Data connections\n**Connect**\n```javascript\nvar conn = peer.connect('another-peers-id');\nconn.on('open', function(){\n  conn.send('hi!');\n});\n```\n**Receive**\n```javascript\npeer.on('connection', function(conn) {\n  conn.on('data', function(data){\n    // Will print 'hi!'\n    console.log(data);\n  });\n});\n```\n\n## Media calls\n**Call**\n```javascript\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\nnavigator.getUserMedia({video: true, audio: true}, function(stream) {\n  var call = peer.call('another-peers-id', stream);\n  call.on('stream', function(remoteStream) {\n    // Show stream in some <video> element.\n  });\n}, function(err) {\n  console.log('Failed to get local stream' ,err);\n});\n\n```\n**Answer**\n```javascript\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\npeer.on('call', function(call) {\n  navigator.getUserMedia({video: true, audio: true}, function(stream) {\n    call.answer(stream); // Answer the call with an A/V stream.\n    call.on('stream', function(remoteStream) {\n      // Show stream in some <video> element.\n    });\n  }, function(err) {\n    console.log('Failed to get local stream' ,err);\n  });\n});\n```\n## Links\n\n### [Documentation / API Reference](http://peerjs.com/docs)\n\n### [WebRTC Browser compatibility status](http://peerjs.com/status)\n\n### [PeerServer](https://github.com/peers/peerjs-server)\n\n### [Discuss PeerJS on our Google Group](https://groups.google.com/forum/?fromgroups#!forum/peerjs)\n\n### [Changelog](https://github.com/peers/peerjs/blob/master/changelog.md)\n\n##License\nPeerJS is licensed under the [MIT License](https://tldrlegal.com/l/mit).\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/peers/peerjs.git"
  },
  "scripts": {
    "prepublish": "grunt"
  },
  "version": "0.3.14"
}
